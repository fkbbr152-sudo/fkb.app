@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
/* sessao-acontecefkb.component.scss */

.cont {
  width: 100%;
  overflow: hidden;
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-top: 30px;
}

.gallery, .gallery-right {
  display: flex;
  gap: 20px;
  // Isso garante que o container tenha a largura exata de todo o conteúdo (2x o número de imagens)
  width: fit-content; 
}

.gallery img, .gallery-right img {
  max-width: 250px;
  height: 300px;
  border-radius: 10px;
  object-fit: cover;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

/* ===== ANIMAÇÕES COM LOOP PERFEITO ===== */

.gallery {
  // linear -> velocidade constante, sem aceleração ou desaceleração.
  // infinite -> repete a animação para sempre.
  animation: scroll 80s linear infinite;
}

.gallery-right {
  animation: scroll-right 80s linear infinite;
}

/* --- Keyframes para a Galeria 1 --- */
@keyframes scroll {
  from {
    transform: translateX(0);
  }
  to {
    // A translação move o container exatamente pela largura do PRIMEIRO conjunto de imagens.
    // Quando a animação recomeça (salta para 'from'), o segundo conjunto de imagens
    // estará na posição exata em que o primeiro estava, criando um loop visualmente perfeito.
    transform: translateX(calc((250px + 20px) * -15));
  }
}

/* --- Keyframes para a Galeria 2 --- */
@keyframes scroll-right {
  from {
    // A lógica é a mesma, mas a animação corre ao contrário.
    transform: translateX(calc((250px + 20px) * -16));
  }
  to {
    transform: translateX(0);
  }
}

/* ===== RESPONSIVIDADE PARA MOBILE ===== */

@media (max-width: 768px) {
  .gallery img, .gallery-right img {
    max-width: 180px;
    height: 230px;
  }

  // É crucial redefinir os keyframes para mobile com os novos tamanhos.
  @keyframes scroll {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(calc((180px + 20px) * -15));
    }
  }

  @keyframes scroll-right {
    from {
      transform: translateX(calc((180px + 20px) * -16));
    }
    to {
      transform: translateX(0);
    }
  }
}